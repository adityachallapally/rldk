"""Utility modules for RLDK.

This package contains utility functions and classes for validation, error handling,
progress indication, and seed management in RLDK.
"""

from .error_handling import (
    AdapterError,
    EvaluationError,
    RLDKError,
    RLDKTimeoutError,
    ValidationError,
    check_dependencies,
    format_error_message,
    format_structured_error_message,
    handle_graceful_degradation,
    log_error_with_context,
    print_troubleshooting_tips,
    print_usage_examples,
    progress_indicator,
    safe_operation,
    sanitize_path,
    validate_adapter_source,
    validate_data_format,
    validate_file_path,
    validate_required_fields,
    validate_training_run_directory,
    with_retry,
)
from .progress import (
    ProgressBar,
    Spinner,
    TaskContext,
    TaskTracker,
    create_batch_progress,
    create_download_progress,
    create_processing_progress,
    create_progress_callback,
    create_validation_progress,
    estimate_remaining_time,
    estimate_time_remaining,
    format_duration,
    format_time_remaining,
    print_operation_status,
    progress_bar,
    spinner,
    timed_operation,
    timed_operation_context,
    track_progress,
    track_tasks,
)
from .seed import (
    SeedManager,
    create_seed_context,
    get_current_seed,
    get_seed_state_summary,
    reset_global_seed,
    restore_original_state,
    restore_seed_state,
    set_global_seed,
    set_reproducible_environment,
    validate_seed_consistency,
)
from .validation import (
    validate_adapter_type,
    validate_choice,
    validate_data_quality,
    validate_dataframe,
    validate_directory_exists,
    validate_evaluation_suite,
    validate_file_exists,
    validate_file_extension,
    validate_file_size,
    validate_json_file,
    validate_json_file_with_size_check,
    validate_jsonl_file,
    validate_jsonl_file_streaming,
    validate_non_negative_integer,
    validate_numeric_range,
    validate_optional_positive_integer,
    validate_optional_string,
    validate_positive_integer,
    validate_probability,
    validate_string_not_empty,
    validate_wandb_uri,
    validate_with_custom_validator,
)

__all__ = [
    # Validation utilities
    "validate_file_exists",
    "validate_directory_exists",
    "validate_file_extension",
    "validate_json_file",
    "validate_json_file_with_size_check",
    "validate_jsonl_file",
    "validate_jsonl_file_streaming",
    "validate_dataframe",
    "validate_numeric_range",
    "validate_string_not_empty",
    "validate_choice",
    "validate_wandb_uri",
    "validate_adapter_type",
    "validate_evaluation_suite",
    "validate_positive_integer",
    "validate_non_negative_integer",
    "validate_probability",
    "validate_optional_string",
    "validate_optional_positive_integer",
    "validate_file_size",
    "validate_data_quality",
    "validate_with_custom_validator",

    # Error handling utilities
    "RLDKError",
    "ValidationError",
    "AdapterError",
    "EvaluationError",
    "RLDKTimeoutError",
    "format_error_message",
    "format_structured_error_message",
    "log_error_with_context",
    "validate_file_path",
    "validate_training_run_directory",
    "sanitize_path",
    "validate_data_format",
    "validate_required_fields",
    "progress_indicator",
    "with_retry",
    "handle_graceful_degradation",
    "validate_adapter_source",
    "print_usage_examples",
    "print_troubleshooting_tips",
    "check_dependencies",
    "safe_operation",

    # Progress utilities
    "ProgressBar",
    "Spinner",
    "TaskTracker",
    "TaskContext",
    "progress_bar",
    "spinner",
    "track_progress",
    "timed_operation",
    "timed_operation_context",
    "estimate_remaining_time",
    "format_duration",
    "print_operation_status",
    "create_progress_callback",
    "track_tasks",
    "estimate_time_remaining",
    "format_time_remaining",
    "create_download_progress",
    "create_processing_progress",
    "create_batch_progress",
    "create_validation_progress",

    # Seed management utilities
    "SeedManager",
    "set_global_seed",
    "get_current_seed",
    "reset_global_seed",
    "restore_seed_state",
    "restore_original_state",
    "get_seed_state_summary",
    "set_reproducible_environment",
    "validate_seed_consistency",
    "create_seed_context",
]
